In this section we are going to look at how to add support to function in our Jlox implementation of the language Lox.

        `And that is also the way the human mind works—by the compounding of old ideas into new structures that become
            new ideas that can themselves be used in compounds, and round and round endlessly, growing ever more remote
            from the basic earthbound imagery that is each language’s soil.`

                - Douglas R. Hofstadter, I Am a Strange Loop


        Functions calls:
       ------------------
Functions calls are the parentheses that follow an identifier.
So these parentheses is a new operator that has the highest precedence in the grammar.

Here is the new grammar:
    unary       -> ('!' | '-') unary | call ;
    call        -> primary ( '(' arguments? ')' )* ;
The arguments list argument is a new expression grammar:
    arguments       -> expression ( ',' expression )* ;


The function's arity is the number of arguments that is passed to the function according to the number of parameters the
function aspect. So if the function expect 3 arguments and that you provide 2 then we are in face of the arity problem.
Some languages throw an error in the compile phase but other in runtime phase.
